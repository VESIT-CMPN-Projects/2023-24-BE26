{"ast":null,"code":"var _jsxFileName = \"C:\\\\Green_Energy_react\\\\react-admin\\\\src\\\\components\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport { useTheme } from \"@mui/material\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { tokens } from \"../theme\";\nimport { Height } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  isDashboard = false,\n  Inputdata,\n  keys,\n  index\n}) => {\n  _s();\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n    data: Inputdata,\n    theme: {\n      // added\n      axis: {\n        domain: {\n          line: {\n            stroke: colors.grey[100]\n          }\n        },\n        legend: {\n          text: {\n            fill: colors.grey[100]\n          }\n        },\n        ticks: {\n          line: {\n            stroke: colors.grey[100],\n            strokeWidth: 1\n          },\n          text: {\n            fill: colors.grey[100]\n          }\n        }\n      },\n      legends: {\n        text: {\n          fill: colors.grey[100]\n        }\n      }\n    }\n    // valueScale={{ type: \"log\", base: 10, min: 1, max: 1000 }}\n    ,\n    keys: keys //{[\"Solar Power\", \"Wind Power\"]}\n    ,\n    indexBy: index //\"city\"\n    ,\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    valueScale: {\n      type: \"linear\",\n      base: 10,\n      min: 0\n    },\n    indexScale: {\n      type: \"band\",\n      round: true\n    },\n    colors: {\n      scheme: \"pastel2\"\n    },\n    defs: [{\n      id: \"dots\",\n      type: \"patternDots\",\n      background: \"inherit\",\n      color: \"#38bcb2\",\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: \"lines\",\n      type: \"patternLines\",\n      background: \"inherit\",\n      color: \"#eed312\",\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", \"1.6\"]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? undefined : \"Energy Source\",\n      // changed\n      legendPosition: \"middle\",\n      legendOffset: 32\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? undefined : \"Energy\",\n      // changed\n      legendPosition: \"middle\",\n      legendOffset: -40\n    },\n    enableLabel: true,\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 2.6]]\n    },\n    legends: [{\n      dataFrom: \"keys\",\n      anchor: \"bottom-right\",\n      direction: \"column\",\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: \"left-to-right\",\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [{\n        on: \"hover\",\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    role: \"application\",\n    barLabel: ({\n      id,\n      formattedValue\n    }) => `${id}: ${formattedValue}`,\n    labelPosition: \"top\" // Set label position to 'top'\n    ,\n    labelAlign: \"middle\"\n    /*barAriaLabel={function (e) {\n        console.log(e.id)\n        return e.id ;//+ \": \" + e.formattedValue + \" in city: \" + e.indexValue;\n      }}\n    */\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["useTheme","ResponsiveBar","tokens","Height","jsxDEV","_jsxDEV","BarChart","isDashboard","Inputdata","keys","index","_s","theme","colors","palette","mode","data","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","indexBy","margin","top","right","bottom","left","padding","valueScale","type","base","min","indexScale","round","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","undefined","legendPosition","legendOffset","axisLeft","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","role","barLabel","formattedValue","labelPosition","labelAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Green_Energy_react/react-admin/src/components/BarChart.jsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { tokens } from \"../theme\";\nimport { Height } from \"@mui/icons-material\";\n\n\nconst BarChart = ({ isDashboard = false , Inputdata, keys , index}) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <ResponsiveBar \n      \n      data={Inputdata}\n      theme={{\n        // added\n        axis: {\n          domain: {\n            line: {\n              stroke: colors.grey[100],\n            },\n          },\n          legend: {\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n          ticks: {\n            line: {\n              stroke: colors.grey[100],\n              strokeWidth: 1,\n            },\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n        },\n        legends: {\n          text: {\n            fill: colors.grey[100],\n          },\n        },\n      }}\n     // valueScale={{ type: \"log\", base: 10, min: 1, max: 1000 }}\n      keys={keys}//{[\"Solar Power\", \"Wind Power\"]}\n      indexBy={index}//\"city\"\n      margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n      padding={0.3}\n      valueScale={{ type: \"linear\", base: 10, min: 0 }}\n      indexScale={{ type: \"band\", round: true }}\n      colors={{ scheme: \"pastel2\" }}\n      defs={[\n        {\n          id: \"dots\",\n          type: \"patternDots\",\n          background: \"inherit\",\n          color: \"#38bcb2\",\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: \"lines\",\n          type: \"patternLines\",\n          background: \"inherit\",\n          color: \"#eed312\",\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      borderColor={{\n        from: \"color\",\n        modifiers: [[\"darker\", \"1.6\"]],\n      }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: isDashboard ? undefined : \"Energy Source\", // changed\n        legendPosition: \"middle\",\n        legendOffset: 32,\n      }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: isDashboard ? undefined : \"Energy\", // changed\n        legendPosition: \"middle\",\n        legendOffset: -40,\n      }}\n      enableLabel={true}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={{\n        from: \"color\",\n        modifiers: [[\"darker\", 2.6]],\n      }}\n      legends={[\n        {\n          dataFrom: \"keys\",\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 120,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 100,\n          itemHeight: 20,\n          itemDirection: \"left-to-right\",\n          itemOpacity: 0.85,\n          symbolSize: 20,\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n      role=\"application\"\n      barLabel={({ id, formattedValue }) => `${id}: ${formattedValue}`}\n      labelPosition=\"top\"        // Set label position to 'top'\n      labelAlign=\"middle\"  \n    /*barAriaLabel={function (e) {\n        console.log(e.id)\n        return e.id ;//+ \": \" + e.formattedValue + \" in city: \" + e.indexValue;\n      }}\n    */\n    />\n  );\n};\n\nexport default BarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}