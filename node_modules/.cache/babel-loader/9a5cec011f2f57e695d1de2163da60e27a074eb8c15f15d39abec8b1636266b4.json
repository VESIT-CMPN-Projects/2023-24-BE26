{"ast":null,"code":"var _jsxFileName = \"C:\\\\Green_Energy_react\\\\react-admin\\\\src\\\\scenes\\\\bar\\\\index.jsx\";\nimport { Box } from \"@mui/material\";\nimport Header from \"../../components/Header\";\nimport BarChart from \"../../components/BarChart\";\nimport { actualBarData as datamock } from \"../../data/mockData\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet [data, setData] = useState([]);\nuseEffect(() => {\n  getData();\n}, []);\nlet getData = async () => {\n  let response = await fetch('http://127.0.0.1:8000/api/city/' + props.city);\n  let res = await response.json();\n  //console.log(res[0][\"Maximum Temperature\"])\n\n  setData(res[0]);\n};\nconst Bar = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Bar Chart\",\n      subtitle: \"Simple Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      height: \"75vh\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        Inputdata: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Bar;\nexport default Bar;\nvar _c;\n$RefreshReg$(_c, \"Bar\");","map":{"version":3,"names":["Box","Header","BarChart","actualBarData","datamock","useEffect","useState","jsxDEV","_jsxDEV","data","setData","getData","response","fetch","props","city","res","json","Bar","m","children","title","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","height","Inputdata","_c","$RefreshReg$"],"sources":["C:/Green_Energy_react/react-admin/src/scenes/bar/index.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport Header from \"../../components/Header\";\nimport BarChart from \"../../components/BarChart\";\nimport { actualBarData as datamock } from \"../../data/mockData\";\nimport { useEffect, useState } from \"react\";\n\nlet [data, setData] = useState([])\nuseEffect(()=>{\n\n getData();\n},[])\n\nlet getData = async () =>{\n    let response = await fetch('http://127.0.0.1:8000/api/city/'+props.city)\n    let res = await response.json()\n    //console.log(res[0][\"Maximum Temperature\"])\n    \n    setData(res[0])\n    \n}\n\nconst Bar = () => {\n  return (\n    <Box m=\"20px\">\n      <Header title=\"Bar Chart\" subtitle=\"Simple Bar Chart\" />\n      <Box height=\"75vh\">\n        <BarChart Inputdata={data} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Bar;\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,aAAa,IAAIC,QAAQ,QAAQ,qBAAqB;AAC/D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;AAClCD,SAAS,CAAC,MAAI;EAEbM,OAAO,CAAC,CAAC;AACV,CAAC,EAAC,EAAE,CAAC;AAEL,IAAIA,OAAO,GAAG,MAAAA,CAAA,KAAW;EACrB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,GAACC,KAAK,CAACC,IAAI,CAAC;EACxE,IAAIC,GAAG,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC/B;;EAEAP,OAAO,CAACM,GAAG,CAAC,CAAC,CAAC,CAAC;AAEnB,CAAC;AAED,MAAME,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEV,OAAA,CAACR,GAAG;IAACmB,CAAC,EAAC,MAAM;IAAAC,QAAA,gBACXZ,OAAA,CAACP,MAAM;MAACoB,KAAK,EAAC,WAAW;MAACC,QAAQ,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxDlB,OAAA,CAACR,GAAG;MAAC2B,MAAM,EAAC,MAAM;MAAAP,QAAA,eAChBZ,OAAA,CAACN,QAAQ;QAAC0B,SAAS,EAAEnB;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GATIX,GAAG;AAWT,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}